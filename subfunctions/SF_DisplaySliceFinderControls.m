function SF_DisplaySliceFinderControls(hObject,varargin)
	
	% Print controls
	CreateStruct.Interpreter = 'tex';
	CreateStruct.WindowStyle = 'non-modal';
	hMsgBox = msgbox( ...
		{'\fontsize{12}Tip: if the keyboard controls stop working after you press a button, click somewhere in the header area to return focus to the GUI.' ...
		'' ...
		'\bf Image navigation: \rm' ...
		'Left/right arrow  : move to previous/next image' ...
		'Page up/down      : move forward/back by five' ...
		'Home/end          : move to first/last image' ...
		''...
		'\bf Slice control: \rm' ...
		'q/e   : roll clockwise/counter-clockwise' ...
		'w/s   : pitch down/up' ...
		'a/d   : yaw left/right' ...
		'i/k   : DV, move up/down' ...
		'j/l   : ML, move left/right' ...
		'h/n   : AP, move forward/back' ...
		'shift + i/k : stretch/shrink vertically' ...
		'shift + j/l : stretch/shrink horizontally' ...
		'F2    : invert ML/DV axis movement' ...
		'F3/F4 : cycle forward/back trough slice overlay types' ...
		't     : slice/area transparency (toggle on/off)' ...
		''...
		'\bf Copy/paste slice rotation+position: \rm' ...
		'Control+c : copy settings of current slice' ...
		'Control+v : paste previously copied settings to slice' ...
		'Control+b : interpolate slices between last two copied slices'...
		'Control+z : undo last paste/interpolation'...
		''...
		'\bf 3D brain areas: \rm' ...
		'=/+ : add (list selector)' ...
		'Alt/Option =/+ : add (search)' ...
		'- : remove', ...
		''...
		'\bf Other: \rm' ...
		'x  : export data for ProbeFinder'...
		'F5 : save data' ...
		'F9 : load data', ...
		'F1 : bring up this window'}, ...
		'Controls',CreateStruct);
	
	%add handles & return to hMsgBox
	sGUI = guidata(hObject);
	sGUI = guidata(sGUI.handles.hMain);
	hRealMain = sGUI.handles.hMain;
	sMiniGUI = struct;
	sMiniGUI.hMain = hRealMain;
	sMiniGUI.handles.hMain = hRealMain;
	guidata(hMsgBox,sMiniGUI);
	set(hMsgBox,'KeyPressFcn',@SF_KeyPress);
	set(hMsgBox,'DeleteFcn',@PH_DeleteHelpFcn);
	
	%reset focus
	set(sGUI.handles.ptrButtonHelp, 'enable', 'off');
	drawnow;
	set(sGUI.handles.ptrButtonHelp, 'enable', 'on');
		
	%release
	sGUI.IsBusy = false;
	guidata(sGUI.handles.hMain,sGUI);
end


